name: CI

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:

permissions:
  contents: read

jobs:
  quality:
    name: Quality Gates (pre-commit, mypy, import contracts)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install project (editable) with dev extras
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Show environment
        run: |
          python --version
          pip --version
          pip list

      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files

      - name: Run mypy
        run: |
          mypy

      - name: Enforce architecture contracts (import-linter)
        run: |
          lint-imports -c importlinter.ini

  tests:
    name: Tests and Coverage
    runs-on: ubuntu-latest
    needs: quality
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install project (editable) with dev extras
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests with coverage (XML + terminal)
        run: |
          pytest --cov=src --cov-report=xml --cov-report=term-missing

      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-py${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: error

  docs:
    name: Docs Build (MkDocs strict)
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install project (editable) with dev extras
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Build documentation
        run: |
          mkdocs build --strict

      - name: Upload site (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: site
          if-no-files-found: error

  security:
    name: Security Scans (pip-audit, bandit)
    runs-on: ubuntu-latest
    needs: [tests, docs]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install project (editable) with dev extras
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: pip-audit (fail on vulnerabilities)
        run: |
          pip-audit

      - name: Bandit (static analysis)
        run: |
          bandit -q -r src
