[project]
name = "cline_project_template"
version = "0.1.0"
description = "Production-grade Python template enforcing elegance, modularity, Pythonic best practices, and clean architecture."
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
dependencies = [
    "click>=8",
    "pydantic>=2",
    "pydantic-settings>=2"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "hypothesis",
    "coverage",
    "black",
    "ruff",
    "isort",
    "mypy",
    "interrogate",
    "bandit",
    "pip-audit",
    "pre-commit",
    "detect-secrets",
    "commitizen",
    "import-linter",
    "mkdocs-material",
    "pymdown-extensions",
    "build",
    "twine",
    "bumpver"
]

[project.scripts]
cline-template-cli = "cline_project_template.cli.main:cli"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "W", "I", "B", "C4", "SIM", "N", "Q", "D"]
ignore = ["E203", "E501"]
src = ["src"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.11"
packages = ["cline_project_template"]
strict = true
warn_unused_ignores = true
disallow_any_generics = true

[tool.pytest.ini_options]
addopts = "-q -ra"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src/cline_project_template"]
branch = true

[tool.coverage.report]
fail_under = 90
show_missing = true


[tool.interrogate]
fail-under = 90
exclude = ["tests", "docs"]
verbose = 1

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = ["pyproject.toml:^version"]

[tool.cline.license_policy]
# SHA-256 hash of the template LICENSE file (normalized LF newlines)
template_license_sha256 = "836a226159b9fa9ab398adb8185e5564045f5fd47fee0515b641f758deb37279"
template_repo_urls = ["https://github.com/your-org/cline_project_template"]
auto_remove = true
allow_in_template_repo = true
backup_dir = ".license_backup"

[tool.bumpver]
current_version = "0.1.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "chore(release): bump version to {new_version}"
tag_message = "v{new_version}"
tag_scope = "default"
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"',
    'current_version = "{version}"'
]
"src/cline_project_template/__init__.py" = [
    '__version__ = "{version}"'
]
